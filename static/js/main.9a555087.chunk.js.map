{"version":3,"sources":["App.module.css","components/tag/tag.module.css","components/preloader/preloader.module.css","components/linkButton/linkButton.module.css","components/container/container.module.css","components/copyNotification/copyNotification.module.css","components/catItem/catItem.module.css","components/tag/index.js","components/tag/tag.jsx","components/preloader/cat.gif","components/preloader/index.js","components/preloader/preloader.jsx","context/notificationContext.js","components/linkButton/index.js","components/linkButton/linkButton.jsx","components/catItem/index.js","components/catItem/catItem.jsx","components/container/index.js","components/container/container.jsx","components/copyNotification/index.js","components/copyNotification/copyNotification.jsx","App.js","utilities/math.js","index.js"],"names":["module","exports","Tag","text","className","styles","tag","Preloader","preloader","src","Cat","alt","NotificationContext","createContext","isLoaded","LinkButton","clickTimer","size","url","setIsCopy","useContext","useEffect","clearTimeout","linkButton","onClick","setTimeout","xmlns","width","height","viewBox","d","CatItem","useState","catImg","setCatImg","catTags","setCatTags","isLoad","setIsLoad","cancel","axios","get","then","res","id","data","tags","catImgUrl","catItem","cn","isNotLoaded","loaded","onLoad","catItemBottom","catItemTags","map","i","catItemButtons","VKShareButton","image","noParse","title","VKIcon","round","TelegramShareButton","TelegramIcon","Container","children","container","CopyNotification","copyNotification","App","min","max","catArr","setCatArr","useInView","ref","inView","Math","ceil","floor","random","backgroundKey","isCopy","call","useCallback","newCatArr","push","prevArr","uploadCats","Provider","value","cat","length","catWrap","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a555087.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"warm\":\"App_warm__35pAD\",\"blue\":\"App_blue__3ticm\",\"light\":\"App_light__315M3\",\"green\":\"App_green__1MhGX\",\"orange\":\"App_orange__oezC2\",\"catWrap\":\"App_catWrap__2F_aW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"tag_tag__2mB18\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__3CdEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkButton\":\"linkButton_linkButton__1B2wy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__deHw2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"copyNotification\":\"copyNotification_copyNotification__l7wVN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"catItem\":\"catItem_catItem__3hO4L\",\"catItemBottom\":\"catItem_catItemBottom__36KGP\",\"catItemTags\":\"catItem_catItemTags__3atvw\",\"catItemButtons\":\"catItem_catItemButtons__ErAbu\",\"isNotLoaded\":\"catItem_isNotLoaded__ly1tm\",\"loaded\":\"catItem_loaded__2qm8h\"};","import Tag from \"./tag\";\r\nexport default Tag;","import styles from \"./tag.module.css\"\r\n\r\nconst Tag = ({ text }) => {\r\n    return (\r\n        <div className={styles.tag}>\r\n            {text}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tag;\r\n","export default __webpack_public_path__ + \"static/media/cat.7fe576e5.gif\";","import Preloader from \"./preloader\";\r\nexport default Preloader;","import React from 'react';\r\nimport Cat from \"./cat.gif\";\r\nimport styles from \"./preloader.module.css\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={styles.preloader}>\r\n            <img src={Cat} alt={\"\"}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;\r\n","import {createContext} from \"react\";\r\n\r\nconst NotificationContext = createContext({\r\n    isLoaded: false,\r\n})\r\n\r\nexport default NotificationContext;","import LinkButton from \"./linkButton\";\r\nexport default LinkButton;","import styles from \"./linkButton.module.css\";\r\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\r\nimport {useContext, useEffect} from \"react\";\r\nimport NotificationContext from \"../../context/notificationContext\";\r\n\r\nconst LinkButton = ({size, url}) => {\r\n    const {setIsCopy} = useContext(NotificationContext);\r\n    let clickTimer;\r\n    \r\n    useEffect(() => {\r\n        return clearTimeout(clickTimer);\r\n    }, [clickTimer])\r\n    \r\n    const linkCLicked = ( ) => {\r\n        setIsCopy(true);\r\n\r\n        clickTimer = setTimeout( () => {\r\n            setIsCopy(false)\r\n        }, 2500)\r\n    }\r\n\r\n\r\n    return (\r\n        <CopyToClipboard text={url}>\r\n            <button className={styles.linkButton} onClick={() => linkCLicked()}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width={`${size - 3}`} height={`${size - 3}`}\r\n                     viewBox=\"0 0 24 24\">\r\n                    <path\r\n                        d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/>\r\n                </svg>\r\n            </button>\r\n        </CopyToClipboard>\r\n    )\r\n}\r\n\r\nexport default LinkButton;","import CatItem from \"./catItem\";\r\nexport default CatItem;","import axios from \"axios\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {TelegramIcon, TelegramShareButton, VKIcon, VKShareButton} from \"react-share\";\r\nimport styles from \"./catItem.module.css\";\r\nimport Tag from \"../tag\";\r\nimport Preloader from \"../preloader\";\r\nimport cn from \"classnames\";\r\nimport LinkButton from \"../linkButton\";\r\n\r\nconst CatItem = () => {\r\n    const [catImg, setCatImg] = useState('');\r\n    const [catTags, setCatTags] = useState([])\r\n    const [isLoad, setIsLoad] = useState(false)\r\n\r\n    const getCatData = () => {\r\n        return axios.get('https://cataas.com/cat?json=true')\r\n            .then(res => ({\r\n                id: res.data.id,\r\n                tags: res.data.tags\r\n            }));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        let cancel = false\r\n\r\n        getCatData().then(res => {\r\n            if (!cancel) {\r\n                setCatImg(res.id);\r\n                setCatTags(res.tags);\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            cancel = true\r\n        };\r\n    }, []);\r\n\r\n    if (catImg === '') {\r\n        return null;\r\n    }\r\n\r\n    const catImgUrl = `https://cataas.com/cat/${catImg}`;\r\n\r\n    return (\r\n        <div className={styles.catItem}>\r\n\r\n            <img className={cn({\r\n                [styles.isNotLoaded]: !isLoad,\r\n                [styles.loaded]: isLoad,\r\n            })} src={catImgUrl} alt=\"\" onLoad={() => setIsLoad(true)}/>\r\n\r\n            {!isLoad && <Preloader/>}\r\n\r\n            <div className={styles.catItemBottom}>\r\n                <div className={styles.catItemTags}>\r\n                    {catTags.map(i => <Tag key={i} text={i}/>)}\r\n                </div>\r\n\r\n\r\n                <div className={styles.catItemButtons}>\r\n                    <VKShareButton\r\n                        image={catImgUrl}\r\n                        url={catImgUrl}\r\n                        noParse={true}\r\n                        title={\"котик\"}\r\n                    >\r\n                        <VKIcon size={35} round={true}/>\r\n                    </VKShareButton>\r\n\r\n                    <TelegramShareButton url={catImgUrl}>\r\n                        <TelegramIcon size={35} round={true}/>\r\n                    </TelegramShareButton>\r\n\r\n                    <LinkButton size={35} url={catImgUrl}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CatItem;\r\n","import Container from \"./container\";\r\nexport default Container;","import styles from \"./container.module.css\";\r\n\r\nconst Container = ({children}) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Container;\r\n","import CopyNotification from \"./copyNotification\";\r\nexport default CopyNotification;","import styles from \"./copyNotification.module.css\";\r\n\r\nconst CopyNotification = () => {\r\n\r\n    return (\r\n        <div className={styles.copyNotification}>\r\n            Link copied to clipboard!\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CopyNotification;\r\n","import {useCallback, useEffect, useState} from \"react\";\nimport CatItem from \"./components/catItem\";\nimport {useInView} from \"react-intersection-observer\";\nimport Container from \"./components/container\";\nimport cn from \"classnames\";\nimport styles from \"./App.module.css\"\nimport {randomNumber} from \"./utilities/math\";\nimport CopyNotification from \"./components/copyNotification\";\nimport NotificationContext from \"./context/notificationContext\";\n\nfunction App() {\n    const [catArr, setCatArr] = useState([<CatItem/>])\n    const [ref, inView] = useInView({});\n    const [backgroundKey] = useState(randomNumber(0, 4));\n    const [isCopy, setIsCopy] = useState(false)\n\n    const call = useCallback(() => {\n        const uploadCats = () => {\n            const newCatArr = [];\n\n            for (let i = 0; i < 10; i++) {\n                newCatArr.push(<CatItem/>);\n            }\n            setCatArr(prevArr => [...prevArr, ...newCatArr]);\n        }\n\n        uploadCats();\n\n    }, []);\n    const backgrounds = ['warm', 'blue', \"light\", \"green\", \"orange\"];\n\n\n    useEffect(() => {\n        if (inView === true) {\n            call();\n        }\n    }, [inView, call]);\n\n\n    return (\n        <NotificationContext.Provider value={{setIsCopy: setIsCopy}}>\n            <div className={cn(`${styles[backgrounds[backgroundKey]]}`)}>\n                    {isCopy && <CopyNotification/>}\n                <Container>\n\n                    {catArr.map((cat, i) => {\n                        if (catArr.length === i + 1) {\n                            return <div key={i} ref={ref} className={styles.catWrap}>{cat}</div>\n                        } else {\n                            return <div key={i} className={styles.catWrap}>{cat}</div>\n                        }\n                    })}\n                </Container>\n            </div>\n        </NotificationContext.Provider>\n\n    );\n}\n\nexport default App;\n","export function randomNumber(min, max) {\r\n\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max+1);\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}